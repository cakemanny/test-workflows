on:
  issue_comment:
    types: [created, edited, deleted]

permissions:
  contents: write
  issues: write  # to react to comment (doesn't work)
  pull-requests: write  # to find out head branch or does it need to be write, for reactions?

jobs:
  fake-it:
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '/trigger') }}
    runs-on: ubuntu-latest
    env:
      # for using gh cli
      GH_TOKEN: ${{ github.token }}
      ACCEPT_HEADER: 'Accept: application/vnd.github+json'
      API_VERSION_HEADER: "X-GitHub-Api-Version: 2022-11-28"
    steps:
      - name: React with üëÄ
        run: |
          gh api -H "$ACCEPT_HEADER" -H "$API_VERSION_HEADER" \
            -X POST "${{ github.event.comment.url }}/reactions" \
            -f "content=eyes"

      - name: Work out head branch
        id: find-branch
        run: |
          HEAD_REF=$(
            gh api -H "$ACCEPT_HEADER" -H "$API_VERSION_HEADER" \
              -X GET "${{ github.event.issue.pull_request.url }}" \
              --jq '.head.ref'
          )
          echo "HEAD_REF=$HEAD_REF" >> "$GITHUB_OUTPUT"

      - name: Checkout PR head branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.find-branch.outputs.HEAD_REF }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Check Branch
        run: |
          git branch -v

      - name: Update some file
        run: |
          date > pointless.file

      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add pointless.file
          git commit -m 'chore: pointless commit'
          git pull --rebase
          git push

      - name: React with üëç (+1)
        run: |
          gh api -H "$ACCEPT_HEADER" -H "$API_VERSION_HEADER" \
            -X POST "${{ github.event.comment.url }}/reactions" \
            -f "content=+1"

      - name: Clean up old üëÄ
        if: ${{ always() }}
        run: |
          gh api -H "$ACCEPT_HEADER" -H "$API_VERSION_HEADER" \
            -X GET "${{ github.event.comment.url }}/reactions" \
            -f content=eyes \
            --jq '.[] | select(.user.login == "github-actions[bot]") | .id' \
          | head -1 | while read REACTION_ID; do
            gh api -H "$ACCEPT_HEADER" -H "$API_VERSION_HEADER" \
              -X DELETE \
              "${{ github.event.comment.url }}/reactions/${REACTION_ID}"
          done
